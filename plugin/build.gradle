plugins {
    id 'java-gradle-plugin'

    id 'org.jetbrains.kotlin.jvm' version '1.9.10'

    // to publish gradle plugin
    id 'com.gradle.plugin-publish' version '1.2.1'

    // to force conventional commit style in commits
    id 'it.nicolasfarabegoli.conventional-commits' version '3.1.3'
}

repositories {
    mavenCentral()
}

group = "io.github.asocha"

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation('org.assertj:assertj-core:_')
    testImplementation('org.junit.jupiter:junit-jupiter:_')


    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


gradlePlugin {
    vcsUrl = "https://github.com/a-socha/conventional-commits-graldle-plugin"
    plugins {
        conventionalCommits {
            id = 'io.github.asocha.conventional.commits'
            displayName = 'Conventional Commits Gradle Plugin'
            description = 'Plugin to automate releasing with Conventional Commits'
            tags.set(['conventional-commits', 'semver'])
            implementationClass = 'conventional.commits.plugin.ConventionalCommitsPlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)
configurations.functionalTestRuntimeOnly.extendsFrom(configurations.testRuntimeOnly)

tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    useJUnitPlatform()
}
